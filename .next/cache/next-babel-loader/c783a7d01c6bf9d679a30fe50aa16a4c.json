{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport useSWR from 'swr';\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n};\n\nexport function useUser() {\n  _s();\n\n  var _useSWR = useSWR('/api/user', fetcher),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var user = data && data.user;\n  return [user, {\n    mutate: mutate\n  }];\n}\n\n_s(useUser, \"0peeYUcJ5GMsFIIWiPAveTQkhUs=\", false, function () {\n  return [useSWR];\n});\n\nexport function useCurrentUser() {\n  _s2();\n\n  var _useSWR2 = useSWR('/api/user', fetcher),\n      data = _useSWR2.data,\n      mutate = _useSWR2.mutate;\n\n  var user = data === null || data === void 0 ? void 0 : data.user;\n  return [user, {\n    mutate: mutate\n  }];\n}\n\n_s2(useCurrentUser, \"0peeYUcJ5GMsFIIWiPAveTQkhUs=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/lib/hooks.jsx"],"names":["useSWR","fetcher","url","fetch","then","r","json","useUser","data","mutate","user","useCurrentUser"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,IAAF,EAAP;AAAA,GAAhB,CAAT;AAAA,CAAhB;;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,gBAAyBP,MAAM,CAAC,WAAD,EAAcC,OAAd,CAA/B;AAAA,MAAQO,IAAR,WAAQA,IAAR;AAAA,MAAcC,MAAd,WAAcA,MAAd;;AACA,MAAMC,IAAI,GAAGF,IAAI,IAAIA,IAAI,CAACE,IAA1B;AACA,SAAO,CAACA,IAAD,EAAO;AAAED,IAAAA,MAAM,EAANA;AAAF,GAAP,CAAP;AACD;;GAJeF,O;UACWP,M;;;AAI3B,OAAO,SAASW,cAAT,GAA0B;AAAA;;AAC/B,iBAAyBX,MAAM,CAAC,WAAD,EAAcC,OAAd,CAA/B;AAAA,MAAQO,IAAR,YAAQA,IAAR;AAAA,MAAcC,MAAd,YAAcA,MAAd;;AACA,MAAMC,IAAI,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,IAAnB;AACA,SAAO,CAACA,IAAD,EAAO;AAAED,IAAAA,MAAM,EAANA;AAAF,GAAP,CAAP;AACD;;IAJeE,c;UACWX,M","sourcesContent":["import useSWR from 'swr';\n\nconst fetcher = (url) => fetch(url).then((r) => r.json());\n\nexport function useUser() {\n  const { data, mutate } = useSWR('/api/user', fetcher);\n  const user = data && data.user;\n  return [user, { mutate }];\n}\nexport function useCurrentUser() {\n  const { data, mutate } = useSWR('/api/user', fetcher);\n  const user = data?.user;\n  return [user, { mutate }];\n}\n"]},"metadata":{},"sourceType":"module"}