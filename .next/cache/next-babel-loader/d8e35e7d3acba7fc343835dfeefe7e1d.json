{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/components/AfterLogin.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useUser } from \"../lib/hooks\";\nexport default function afterLogin() {\n  _s();\n\n  var _useState = useState(\"\"),\n      errorMsg = _useState[0],\n      setErrorMsg = _useState[1];\n\n  var _useUser = useUser(),\n      _useUser2 = _slicedToArray(_useUser, 1),\n      user = _useUser2[0];\n\n  var _useState2 = useState(false),\n      Loader = _useState2[0],\n      updateLoad = _useState2[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              updateLoad(true);\n              body = {\n                message: e.currentTarget.message.value,\n                name: user.name\n              };\n              _context.next = 5;\n              return fetch(\"/api/message\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 5:\n              res = _context.sent;\n\n              if (!(res.status === 201)) {\n                _context.next = 10;\n                break;\n              }\n\n              M.toast({\n                html: \"Message sent\",\n                classes: \"green\"\n              });\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.t0 = setErrorMsg;\n              _context.next = 13;\n              return res.text();\n\n            case 13:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 15:\n              updateLoad(false);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col s12 m12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card-panel horizontal blue \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"white-text h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Your PassKey is : \", user.passKey))), errorMsg ? __jsx(\"p\", {\n    style: {\n      color: \"teal\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }, errorMsg) : null, __jsx(\"form\", {\n    className: \"col s12\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"input-field col s12 m9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"material-icons prefix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"mode_edit\"), __jsx(\"textarea\", {\n    id: \"message\",\n    className: \"materialize-textarea\",\n    name: \"message\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Message for developer\")), __jsx(\"button\", {\n    className: \"btn-small waves-effect waves-light blue\",\n    type: \"submit\",\n    style: {\n      marginTop: \"1.7rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Send\", !Loader ? __jsx(\"i\", {\n    className: \"material-icons right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"send\") : __jsx(\"div\", {\n    \"class\": \"preloader-wrapper small active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"spinner-layer spinner-green-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"circle-clipper left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"gap-patch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    \"class\": \"circle-clipper right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    \"class\": \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  })))))));\n}\n\n_s(afterLogin, \"KpVNkSe3I05HHnavChUSW8QlnRQ=\", false, function () {\n  return [useUser];\n});","map":{"version":3,"sources":["/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/components/AfterLogin.jsx"],"names":["React","useState","useUser","afterLogin","errorMsg","setErrorMsg","user","Loader","updateLoad","handleSubmit","e","preventDefault","body","message","currentTarget","value","name","fetch","method","headers","JSON","stringify","res","status","M","toast","html","classes","text","passKey","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useUser } from \"../lib/hooks\";\n\nexport default function afterLogin() {\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [user] = useUser();\n  const [Loader, updateLoad] = useState(false);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    updateLoad(true);\n    const body = {\n      message: e.currentTarget.message.value,\n      name: user.name,\n    };\n    const res = await fetch(\"/api/message\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    });\n    if (res.status === 201) {\n      M.toast({ html: \"Message sent\", classes: \"green\" });\n    } else {\n      setErrorMsg(await res.text());\n    }\n    updateLoad(false);\n  };\n  return (\n    <div className=\"row\">\n      <div className=\"col s12 m12\">\n        <div className=\"card-panel horizontal blue \">\n          <h1 className=\"white-text h1\">Your PassKey is : {user.passKey}</h1>\n        </div>\n      </div>\n      {errorMsg ? <p style={{ color: \"teal\" }}>{errorMsg}</p> : null}\n      <form className=\"col s12\" onSubmit={handleSubmit}>\n        <div className=\"input-field col s12 m9\">\n          <i className=\"material-icons prefix\">mode_edit</i>\n          <textarea\n            id=\"message\"\n            className=\"materialize-textarea\"\n            name=\"message\"\n            required\n          ></textarea>\n          <label htmlFor=\"message\">Message for developer</label>\n        </div>\n        <button\n          className=\"btn-small waves-effect waves-light blue\"\n          type=\"submit\"\n          style={{ marginTop: \"1.7rem\" }}\n        >\n          Send\n          {!Loader ? (\n            <i className=\"material-icons right\">send</i>\n          ) : (\n            <div class=\"preloader-wrapper small active\">\n              <div class=\"spinner-layer spinner-green-only\">\n                <div class=\"circle-clipper left\">\n                  <div class=\"circle\"></div>\n                </div>\n                <div class=\"gap-patch\">\n                  <div class=\"circle\"></div>\n                </div>\n                <div class=\"circle-clipper right\">\n                  <div class=\"circle\"></div>\n                </div>\n              </div>\n            </div>\n          )}\n        </button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}