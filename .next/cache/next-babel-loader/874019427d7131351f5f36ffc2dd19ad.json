{"ast":null,"code":"import passport from 'passport';\nimport bcrypt from 'bcryptjs';\nimport { Strategy as LocalStrategy } from 'passport-local';\nimport { ObjectId } from 'mongodb';\npassport.serializeUser((user, done) => {\n  done(null, user._id.toString());\n}); // passport#160\n\npassport.deserializeUser((req, id, done) => {\n  req.db.collection('users').findOne(ObjectId(id)).then(user => done(null, user));\n});\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passReqToCallback: true\n}, async (req, email, password, done) => {\n  const user = await req.db.collection('users').findOne({\n    email\n  });\n  if (user && (await bcrypt.compare(password, user.password))) done(null, user);else done(null, false);\n}));\nexport default passport;","map":{"version":3,"sources":["/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/lib/passport.js"],"names":["passport","bcrypt","Strategy","LocalStrategy","ObjectId","serializeUser","user","done","_id","toString","deserializeUser","req","id","db","collection","findOne","then","use","usernameField","passReqToCallback","email","password","compare"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,gBAA1C;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEAJ,QAAQ,CAACK,aAAT,CAAuB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrCA,EAAAA,IAAI,CAAC,IAAD,EAAOD,IAAI,CAACE,GAAL,CAASC,QAAT,EAAP,CAAJ;AACD,CAFD,E,CAIA;;AACAT,QAAQ,CAACU,eAAT,CAAyB,CAACC,GAAD,EAAMC,EAAN,EAAUL,IAAV,KAAmB;AAC1CI,EAAAA,GAAG,CAACE,EAAJ,CACGC,UADH,CACc,OADd,EAEGC,OAFH,CAEWX,QAAQ,CAACQ,EAAD,CAFnB,EAGGI,IAHH,CAGSV,IAAD,IAAUC,IAAI,CAAC,IAAD,EAAOD,IAAP,CAHtB;AAID,CALD;AAOAN,QAAQ,CAACiB,GAAT,CACE,IAAId,aAAJ,CACE;AAAEe,EAAAA,aAAa,EAAE,OAAjB;AAA0BC,EAAAA,iBAAiB,EAAE;AAA7C,CADF,EAEE,OAAOR,GAAP,EAAYS,KAAZ,EAAmBC,QAAnB,EAA6Bd,IAA7B,KAAsC;AACpC,QAAMD,IAAI,GAAG,MAAMK,GAAG,CAACE,EAAJ,CAAOC,UAAP,CAAkB,OAAlB,EAA2BC,OAA3B,CAAmC;AAAEK,IAAAA;AAAF,GAAnC,CAAnB;AACA,MAAId,IAAI,KAAK,MAAML,MAAM,CAACqB,OAAP,CAAeD,QAAf,EAAyBf,IAAI,CAACe,QAA9B,CAAX,CAAR,EAA6Dd,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAJ,CAA7D,KACKC,IAAI,CAAC,IAAD,EAAO,KAAP,CAAJ;AACN,CANH,CADF;AAWA,eAAeP,QAAf","sourcesContent":["import passport from 'passport';\nimport bcrypt from 'bcryptjs';\nimport { Strategy as LocalStrategy } from 'passport-local';\nimport { ObjectId } from 'mongodb';\n\npassport.serializeUser((user, done) => {\n  done(null, user._id.toString());\n});\n\n// passport#160\npassport.deserializeUser((req, id, done) => {\n  req.db\n    .collection('users')\n    .findOne(ObjectId(id))\n    .then((user) => done(null, user));\n});\n\npassport.use(\n  new LocalStrategy(\n    { usernameField: 'email', passReqToCallback: true },\n    async (req, email, password, done) => {\n      const user = await req.db.collection('users').findOne({ email });\n      if (user && (await bcrypt.compare(password, user.password))) done(null, user);\n      else done(null, false)\n    },\n  ),\n);\n\nexport default passport;"]},"metadata":{},"sourceType":"module"}