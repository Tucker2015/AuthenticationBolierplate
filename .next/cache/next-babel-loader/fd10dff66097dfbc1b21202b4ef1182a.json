{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { MdEmail } from \"react-icons/md\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useUser } from \"../lib/hooks\";\nimport Link from 'next/link';\nexport default function Login() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(\"\"),\n      errorMsg = _useState[0],\n      setErrorMsg = _useState[1];\n\n  var _useUser = useUser(),\n      _useUser2 = _slicedToArray(_useUser, 2),\n      user = _useUser2[0],\n      mutate = _useUser2[1].mutate;\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      isLoading = _useState2[1];\n\n  useEffect(function () {\n    // redirect to home if user is authenticated\n    if (user) router.replace(\"/\");\n  }, [user]);\n\n  function onSubmit(_x) {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var body, res, userObj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isLoading(true);\n              e.preventDefault();\n              body = {\n                email: e.currentTarget.email.value,\n                password: e.currentTarget.password.value\n              };\n              _context.next = 5;\n              return fetch(\"/api/auth\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 5:\n              res = _context.sent;\n\n              if (!(res.status === 200)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 9;\n              return res.json();\n\n            case 9:\n              userObj = _context.sent;\n              mutate(userObj);\n              M.toast({\n                html: 'Logged in',\n                classes: 'blue'\n              });\n              _context.next = 16;\n              break;\n\n            case 14:\n              isLoading(false);\n              setErrorMsg(\"Incorrect username or password. Try again!\");\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"card-stacked center-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, loading ? __jsx(\"div\", {\n    className: \"progress\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 28\n    }\n  }, __jsx(\"div\", {\n    className: \"indeterminate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })) : null, __jsx(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"col s12 m12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"card  z-depth-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      fontWeight: 'bolder'\n    },\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, \"Login\"), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 45\n    }\n  }), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  }, errorMsg ? __jsx(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 61\n    }\n  }, errorMsg) : null, __jsx(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 49\n    }\n  }, __jsx(\"i\", {\n    className: \"prefix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 53\n    }\n  }, __jsx(MdEmail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 57\n    }\n  })), __jsx(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    className: \"validate\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 53\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 53\n    }\n  }, \"Email\")), __jsx(\"div\", {\n    className: \"input-field col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 49\n    }\n  }, __jsx(\"i\", {\n    className: \"prefix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 53\n    }\n  }, __jsx(RiLockPasswordFill, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 57\n    }\n  })), __jsx(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    className: \"validate\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 53\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 53\n    }\n  }, \"Password\")), __jsx(\"div\", {\n    className: \"col s12\",\n    style: {\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 49\n    }\n  }, __jsx(\"p\", {\n    className: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 53\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 57\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 61\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 61\n    }\n  }, \"Remember me\"))), __jsx(\"a\", {\n    onClick: function onClick() {\n      return M.toast({\n        html: 'Coming soon',\n        classes: 'toast'\n      });\n    },\n    className: \"right und\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 53\n    }\n  }, \"Forgot password?\")), __jsx(\"div\", {\n    className: \"col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 49\n    }\n  }, __jsx(\"button\", {\n    className: \"waves-effect waves-light btn col s12\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 53\n    }\n  }, \"Login\")))), __jsx(\"div\", {\n    className: \"card-action col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 45\n    }\n  }, \"New here? \", __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 58\n    }\n  }, \"Sign up\")))))))))));\n}\n\n_s(Login, \"IZPMFL14j7w9FoeG7Qw4q00uVVw=\", false, function () {\n  return [useRouter, useUser];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/components/Login.jsx"],"names":["MdEmail","RiLockPasswordFill","React","useState","useEffect","useRouter","useUser","Link","Login","router","errorMsg","setErrorMsg","user","mutate","loading","isLoading","replace","onSubmit","e","preventDefault","body","email","currentTarget","value","password","fetch","method","headers","JSON","stringify","res","status","json","userObj","M","toast","html","classes","margin","fontWeight","color","marginBottom"],"mappings":"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","sourcesContent":["import { MdEmail } from \"react-icons/md\";\nimport { RiLockPasswordFill } from \"react-icons/ri\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useUser } from \"../lib/hooks\";\nimport Link from 'next/link';\n\nexport default function Login() {\n    const router = useRouter();\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [user, { mutate }] = useUser();\n    const [loading, isLoading] = useState(false);\n    useEffect(() => {\n        // redirect to home if user is authenticated\n        if (user) router.replace(\"/\");\n    }, [user]);\n\n    async function onSubmit(e) {\n        isLoading(true);\n        e.preventDefault();\n        const body = {\n            email: e.currentTarget.email.value,\n            password: e.currentTarget.password.value\n        };\n        const res = await fetch(\"/api/auth\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n        });\n        if (res.status === 200) {\n            const userObj = await res.json();\n            mutate(userObj);\n            M.toast({ html: 'Logged in', classes: 'blue' })\n        } else {\n            isLoading(false);\n            setErrorMsg(\"Incorrect username or password. Try again!\");\n        }\n    }\n\n    return (\n        <>\n            <div className=\"card-stacked center-align\">\n                {loading ? <div className=\"progress\" style={{ margin: 0 }}>\n                    <div className=\"indeterminate\"></div>\n                </div> : null}\n                <div className=\"card-content\">\n                    <div className=\"row\">\n                        <div className=\"col s12 m12\">\n                            <div className=\"card  z-depth-0\">\n                                <h4 style={{ fontWeight: 'bolder' }} id=\"title\">Login</h4>\n                                <div className=\"container\">\n                                    <div className=\"card-container\">\n                                        <div className=\"row\">\n                                            <div className=\"card-content\"></div>\n                                            <form onSubmit={onSubmit}>\n                                                {errorMsg ? <p style={{ color: \"red\" }}>{errorMsg}</p> : null}\n                                                <div className=\"input-field col s12\">\n                                                    <i className=\"prefix\">\n                                                        <MdEmail />\n                                                    </i>\n                                                    <input id=\"email\" type=\"text\" className=\"validate\" required />\n                                                    <label htmlFor=\"email\">Email</label>\n                                                </div>\n                                                <div className=\"input-field col s12\">\n                                                    <i className=\"prefix\">\n                                                        <RiLockPasswordFill />\n                                                    </i>\n                                                    <input id=\"password\" type=\"password\" className=\"validate\" required />\n                                                    <label htmlFor=\"password\">Password</label>\n                                                </div>\n                                                <div className=\"col s12\" style={{ marginBottom: '2rem' }}>\n                                                    <p className=\"left\">\n                                                        <label>\n                                                            <input type=\"checkbox\" className=\"filled-in\" />\n                                                            <span>Remember me</span>\n                                                        </label>\n                                                    </p>\n                                                    <a onClick={() => M.toast({ html: 'Coming soon', classes: 'toast' })} className=\"right und\">Forgot password?</a>\n                                                </div>\n                                                <div className=\"col s12\">\n                                                    <button\n                                                        className=\"waves-effect waves-light btn col s12\"\n                                                        type=\"submit\"\n                                                    >\n                                                        Login\n                                        </button>\n                                                </div>\n                                            </form>\n                                        </div>\n                                        <div className=\"card-action col s12\">\n                                            <p>New here? <Link href=\"/signup\">Sign up</Link></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div >\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}