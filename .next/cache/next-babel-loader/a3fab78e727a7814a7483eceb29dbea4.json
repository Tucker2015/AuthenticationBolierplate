{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/components/setting.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Head from 'next/head';\nimport { useCurrentUser } from '../lib/hooks';\n\nconst ProfileSection = () => {\n  const [user, {\n    mutate\n  }] = useCurrentUser();\n  const {\n    0: loading,\n    1: isLoading\n  } = useState(false);\n  const nameRef = useRef();\n  const bioRef = useRef();\n  const profilePictureRef = useRef();\n  const {\n    0: msg,\n    1: setMsg\n  } = useState({\n    message: '',\n    isError: false\n  });\n  useEffect(() => {\n    nameRef.current.value = user.name;\n    bioRef.current.value = user.bio;\n  }, [user]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    isLoading(true);\n    const formData = new FormData();\n\n    if (profilePictureRef.current.files[0]) {\n      formData.append('profilePicture', profilePictureRef.current.files[0]);\n    }\n\n    formData.append('name', nameRef.current.value);\n    formData.append('bio', bioRef.current.value);\n    const res = await fetch('/api/user', {\n      method: 'PATCH',\n      body: formData\n    });\n\n    if (res.status === 200) {\n      const userData = await res.json();\n      mutate({\n        user: _objectSpread(_objectSpread({}, user), userData.user)\n      });\n      setMsg({\n        message: 'Profile updated'\n      });\n    } else {\n      setMsg({\n        message: await res.text(),\n        isError: true\n      });\n    }\n\n    isLoading(false);\n  };\n\n  const handleSubmitPasswordChange = async e => {\n    isLoading(true);\n    e.preventDefault();\n    const body = {\n      oldPassword: e.currentTarget.oldPassword.value,\n      newPassword: e.currentTarget.newPassword.value\n    };\n    e.currentTarget.oldPassword.value = '';\n    e.currentTarget.newPassword.value = '';\n    const res = await fetch('/api/user/password', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (res.status === 200) {\n      setMsg({\n        message: 'Password updated'\n      });\n    } else {\n      setMsg({\n        message: await res.text(),\n        isError: true\n      });\n    }\n\n    isLoading(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Settings\")), loading ? __jsx(\"div\", {\n    className: \"progress\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }\n  }, __jsx(\"div\", {\n    className: \"indeterminate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })) : null, __jsx(\"section\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Edit Profile\"), msg.message ? __jsx(\"p\", {\n    style: {\n      color: msg.isError ? 'red' : '#0070f3',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 32\n    }\n  }, msg.message) : null, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"col s12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"name\",\n    className: \"input-field col s6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Name\", __jsx(\"input\", {\n    required: true,\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Your name\",\n    ref: nameRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"bio\",\n    className: \"input-field col s6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Bio\", __jsx(\"textarea\", {\n    id: \"bio\",\n    name: \"bio\",\n    type: \"text\",\n    placeholder: \"Bio\",\n    ref: bioRef,\n    className: \"materialize-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"Profile picture \\xA0 \"), __jsx(\"div\", {\n    className: \"btn-small file-field input-field blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Choose file\"), __jsx(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    name: \"avatar\",\n    accept: \"image/png, image/jpeg\",\n    ref: profilePictureRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Save\")), __jsx(\"form\", {\n    onSubmit: handleSubmitPasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"oldpassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Old Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"oldPassword\",\n    id: \"oldpassword\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"newpassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"New Password\", __jsx(\"input\", {\n    type: \"password\",\n    name: \"newPassword\",\n    id: \"newpassword\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Change Password\"))));\n};\n\nconst SettingPage = () => {\n  const [user] = useCurrentUser();\n\n  if (!user) {\n    return __jsx(React.Fragment, null, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, \"Please sign in\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(ProfileSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SettingPage;","map":{"version":3,"sources":["/Users/kevin/Desktop/Next.js-Mongodb-Authentication-App/components/setting.jsx"],"names":["React","useState","useEffect","useRef","Head","useCurrentUser","ProfileSection","user","mutate","loading","isLoading","nameRef","bioRef","profilePictureRef","msg","setMsg","message","isError","current","value","name","bio","handleSubmit","event","preventDefault","formData","FormData","files","append","res","fetch","method","body","status","userData","json","text","handleSubmitPasswordChange","e","oldPassword","currentTarget","newPassword","headers","JSON","stringify","margin","color","textAlign","SettingPage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Head from 'next/head';\nimport { useCurrentUser } from '../lib/hooks';\n\nconst ProfileSection = () => {\n    const [user, { mutate }] = useCurrentUser();\n    const [loading, isLoading] = useState(false);\n    const nameRef = useRef();\n    const bioRef = useRef();\n    const profilePictureRef = useRef();\n    const [msg, setMsg] = useState({ message: '', isError: false });\n\n    useEffect(() => {\n        nameRef.current.value = user.name;\n        bioRef.current.value = user.bio;\n    }, [user]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        isLoading(true);\n        const formData = new FormData();\n        if (profilePictureRef.current.files[0]) { formData.append('profilePicture', profilePictureRef.current.files[0]); }\n        formData.append('name', nameRef.current.value);\n        formData.append('bio', bioRef.current.value);\n\n        const res = await fetch('/api/user', {\n            method: 'PATCH',\n            body: formData,\n        });\n        if (res.status === 200) {\n            const userData = await res.json();\n            mutate({\n                user: {\n                    ...user,\n                    ...userData.user,\n                },\n            });\n            setMsg({ message: 'Profile updated' });\n        } else {\n            setMsg({ message: await res.text(), isError: true });\n        }\n        isLoading(false);\n    };\n\n    const handleSubmitPasswordChange = async (e) => {\n        isLoading(true);\n        e.preventDefault();\n        const body = {\n            oldPassword: e.currentTarget.oldPassword.value,\n            newPassword: e.currentTarget.newPassword.value,\n        };\n        e.currentTarget.oldPassword.value = '';\n        e.currentTarget.newPassword.value = '';\n\n        const res = await fetch('/api/user/password', {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body),\n        });\n\n        if (res.status === 200) {\n            setMsg({ message: 'Password updated' });\n        } else {\n            setMsg({ message: await res.text(), isError: true });\n        }\n        isLoading(false);\n    };\n\n    return (\n        <>\n            <Head>\n                <title>Settings</title>\n            </Head>\n            {loading ? <div className=\"progress\" style={{ margin: 0 }}>\n                <div className=\"indeterminate\"></div>\n            </div> : null}\n            <section className=\"\">\n                <h2>Edit Profile</h2>\n                {msg.message ? <p style={{ color: msg.isError ? 'red' : '#0070f3', textAlign: 'center' }}>{msg.message}</p> : null}\n                <form onSubmit={handleSubmit} className=\"col s12\">\n                    <div className=\"divider\"></div>\n                    <label htmlFor=\"name\" className=\"input-field col s6\">\n                        Name\n                            <input\n                            required\n                            id=\"name\"\n                            name=\"name\"\n                            type=\"text\"\n                            placeholder=\"Your name\"\n                            ref={nameRef}\n                        />\n                    </label>\n                    <label htmlFor=\"bio\" className=\"input-field col s6\">\n                        Bio\n                        <textarea\n                            id=\"bio\"\n                            name=\"bio\"\n                            type=\"text\"\n                            placeholder=\"Bio\"\n                            ref={bioRef}\n                            className=\"materialize-textarea\"\n                        />\n                    </label>\n                    <label htmlFor=\"avatar\">\n                        <span>Profile picture &nbsp; </span>\n                        <div className=\"btn-small file-field input-field blue\">\n                            <span>Choose file</span>\n                            <input\n                                type=\"file\"\n                                id=\"avatar\"\n                                name=\"avatar\"\n                                accept=\"image/png, image/jpeg\"\n                                ref={profilePictureRef}\n                            />\n                        </div>\n                    </label>\n                    <br />\n                    <button type=\"submit\" className=\"btn blue\">Save</button>\n                </form>\n                <form onSubmit={handleSubmitPasswordChange}>\n                    <label htmlFor=\"oldpassword\">\n                        Old Password\n            <input\n                            type=\"password\"\n                            name=\"oldPassword\"\n                            id=\"oldpassword\"\n                            required\n                        />\n                    </label>\n                    <label htmlFor=\"newpassword\">\n                        New Password\n            <input\n                            type=\"password\"\n                            name=\"newPassword\"\n                            id=\"newpassword\"\n                            required\n                        />\n                    </label>\n                    <button type=\"submit\" className=\"btn blue\">Change Password</button>\n                </form>\n            </section>\n        </>\n    );\n};\nconst SettingPage = () => {\n    const [user] = useCurrentUser();\n    if (!user) {\n        return (\n            <>\n                <p>Please sign in</p>\n            </>\n        );\n    }\n    return (\n        <>\n            <ProfileSection />\n        </>\n    );\n};\nexport default SettingPage;"]},"metadata":{},"sourceType":"module"}